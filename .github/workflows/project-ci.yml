# name: Team Group-P08-03 CI tasks
# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     services:
#       mysql:
#         image: mysql:8.0
#         ports:
#           - 3307:3306
#         env:
#           MYSQL_ROOT_PASSWORD: password123
#           MYSQL_DATABASE: VetCare

#     steps:
#       - uses: actions/checkout@v4

#       # Check MySQL container logs
#       - name: Check MySQL container logs
#         run: |
#           docker logs $(docker ps -qf "ancestor=mysql:8.0")

#       # Wait for MySQL to be ready
#       - name: Wait for MySQL to be ready
#         run: |
#           echo "Waiting for MySQL to start..."
#           for i in {1..30}; do
#             if mysqladmin ping -h"127.0.0.1" -P3307 --silent; then
#               echo "MySQL is up!"
#               break
#             fi
#             echo "Waiting for database connection... ($i/30)"
#             sleep 10
#           done

#       # Populate the database with an SQL script
#       - name: Populate Database with SQL Script
#         run: |
#           mysql -h 127.0.0.1 -P3307 -u root -ppassword123 VetCare < scripts/init.sql

#       # Set up JDK 17
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'

#       # Build the backend with Maven
#       - name: Build with Maven
#         run: ./mvnw --batch-mode --update-snapshots package
#         env:
#           SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/VetCare
#           SPRING_DATASOURCE_USERNAME: root
#           SPRING_DATASOURCE_PASSWORD: password123

name: Team Group-P08-03 CI tasks
on:
  push:
    branches:
      - main
      - migratingToDocker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Initialize H2 database with the init SQL script
      - name: Initialize H2 Database
        run: |
          echo "Running H2 initialization script"
          java -cp h2.jar org.h2.tools.RunScript -url jdbc:h2:file:/tmp/VetCare -user sa -password password -script scripts/h2-init.sql

      # Build the backend with Maven
      - name: Build and Test with Maven
        run: ./mvnw --batch-mode --update-snapshots package
        env:
          # H2 Database Configuration
          SPRING_APPLICATION_NAME: webapp
          SPRING_DATASOURCE_URL: jdbc:h2:file:/tmp/VetCare
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
          SPRING_DATASOURCE_USERNAME: sa
          SPRING_DATASOURCE_PASSWORD: password
          SPRING_JPA_HIBERNATE_DDL_AUTO: update
          SPRING_JPA_SHOW_SQL: true
          SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
          SPRING_H2_CONSOLE_ENABLED: true
          SPRING_H2_CONSOLE_PATH: /h2-console
          SPRING_H2_CONSOLE_SETTINGS_TRACE: false
          SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS: false
          SPRING_FLYWAY_CLEAN_DISABLED: false